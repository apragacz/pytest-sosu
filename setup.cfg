[bumpversion]
current_version = 0.1.3
commit = True
tag = True
parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)
serialize = 
	{major}.{minor}.{patch}

[metadata]
name = pytest-sosu
version = attr: pytest_sosu._version.__version__
author = Andrzej Pragacz
author-email = apragacz@o2.pl
description = Unofficial PyTest plugin for Sauce Labs
description-file = README.md
long-description = file:README.md
long-description-content-type = text/markdown; charset=UTF-8
url = https://github.com/apragacz/pytest-sosu
project-urls = 
	Bug Tracker = https://github.com/apragacz/pytest-sosu/issues
	Documentation = https://github.com/apragacz/pytest-sosu/blob/master/README.md
	Source Code = https://github.com/apragacz/pytest-sosu
keywords = 
	pytest
	selenium
	webdriver
	saucelabs
	sauce
	sosu
license = MIT
license-file = LICENSE
classifiers = 
	Development Status :: 2 - Pre-Alpha
	Framework :: Pytest
	Intended Audience :: Customer Service
	Intended Audience :: Developers
	License :: OSI Approved :: MIT License
	Operating System :: POSIX
	Operating System :: POSIX :: Linux
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
	Topic :: Software Development :: Testing

[options]
include_package_data = True
python_requires = >=3.7
install_requires = 
	pytest
	selenium<4.0
	structlog

[isort]
profile = black
line_length = 88
skip = build, .venv, .tox
known_first_party = pytest_sosu

[flake8]
max-line-length = 88
exclude = build, .venv, .tox

[pylint]
exclude = build, .venv, .tox
ignore-docstrings = yes
const-rgx = ([a-z_][a-z0-9_]{3,30}|[A-Z_][A-Z0-9_]{3,30})
good-names = i, j, k, db
min-public-methods = 0
max-args = 6
disable = 
	missing-docstring,
	bad-continuation,
	unused-argument,
	no-self-use,
	unused-import,
	line-too-long,
	ungrouped-imports,
	fixme,
	too-many-instance-attributes,
score = no
generated-members = 
	__setattr__

[pylint:similarities]
min-similarity-lines = 5
ignore-imports = yes

[pylint:design]
max-parents = 10

[tool:pytest]
addopts = --doctest-modules
testpaths = 
	tests
	pytest_sosu

[coverage:run]
branch = True
source = 
	pytest_sosu

[coverage:report]
exclude_lines = 
	pragma: no cover
	
	def __repr__
	
	raise AssertionError
	raise NotImplementedError
	
	if __name__ == .__main__.:
	if TYPE_CHECKING:
ignore_errors = True

[coverage:html]
directory = coverage_html_report

[bumpversion:file:pytest_sosu/_version.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"
